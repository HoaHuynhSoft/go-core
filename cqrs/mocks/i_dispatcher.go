// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import context "context"
import cqrs "github.com/HoaHuynhSoft/go-core/cqrs"
import infrastructures "github.com/HoaHuynhSoft/go-core/infrastructures"
import mock "github.com/stretchr/testify/mock"

// IDispatcher is an autogenerated mock type for the IDispatcher type
type IDispatcher struct {
	mock.Mock
}

// Dispatch provides a mock function with given fields: ctx, command
func (_m *IDispatcher) Dispatch(ctx context.Context, command interface{}) *infrastructures.Result {
	ret := _m.Called(ctx, command)

	var r0 *infrastructures.Result
	if rf, ok := ret.Get(0).(func(context.Context, interface{}) *infrastructures.Result); ok {
		r0 = rf(ctx, command)
	} else {
		r0 = ret.Get(0).(*infrastructures.Result)
	}

	return r0
}

// RegisterHandler provides a mock function with given fields: ctx, handler, commands
func (_m *IDispatcher) RegisterHandler(ctx context.Context, handler cqrs.IHandler, commands ...interface{}) error {
	var _ca []interface{}
	_ca = append(_ca, ctx, handler)
	_ca = append(_ca, commands...)
	ret := _m.Called(_ca...)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, cqrs.IHandler, ...interface{}) error); ok {
		r0 = rf(ctx, handler, commands...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
